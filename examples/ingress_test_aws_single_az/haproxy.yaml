apiVersion: v1
kind: ServiceAccount
metadata:
  name: haproxy-kubernetes-ingress
  namespace: default

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: haproxy-kubernetes-ingress
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - services
  - namespaces
  - events
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "extensions"
  - "networking.k8s.io"
  resources:
  - ingresses
  - ingresses/status
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "extensions"
  - "networking.k8s.io"
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
- apiGroups:
  - core.haproxy.org
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ingress.v1.haproxy.org
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - "discovery.k8s.io"
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - "apps"
  resources:
  - replicasets
  - deployments
  - daemonsets
  verbs:
  - get
  - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: haproxy-kubernetes-ingress
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: haproxy-kubernetes-ingress
subjects:
- kind: ServiceAccount
  name: haproxy-kubernetes-ingress
  namespace: default

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-kubernetes-ingress
  namespace: default
data:
  global-config-snippet: |
    nbthread 30
    busy-polling
    strict-limits
    timeout connect 5000
    timeout check 5000
    timeout client 30000
    timeout server 30000

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    run: haproxy-ingress
  name: haproxy-kubernetes-ingress
  namespace: default
spec:
  selector:
    matchLabels:
      run: haproxy-ingress
  template:
    metadata:
      labels:
        run: haproxy-ingress
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: haproxy-kubernetes-ingress
      containers:
      - name: haproxy-ingress
        image: haproxytech/kubernetes-ingress
        args:
          - --configmap=default/haproxy-kubernetes-ingress
          - --configmap-tcp-services=default/tcp-cm
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          runAsUser:  1000
          runAsGroup: 1000
          capabilities:
            drop:
              - ALL
            add:
              - NET_BIND_SERVICE
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            memory: "32Gi"
            cpu: "5"
          requests:
            memory: "32Gi"
            cpu: "5"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 1042
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        - name: stat
          containerPort: 1024
          hostPort: 1024
        env:
        - name: TZ
          value: "Etc/UTC"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
